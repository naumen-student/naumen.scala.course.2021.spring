[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Toriv\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Toriv\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (Oracle Corporation Java 11.0.9)
[debug]       Load.loadUnit: plugins took 717.7975ms
[debug]       Load.loadUnit: defsScala took 0.6337ms
[debug] [Loading] Scanning directory C:\Users\Toriv\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Toriv\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 38.6108 ms
[debug]           Load.resolveProject(global-plugins) took 142.5578ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Toriv\.sbt\1.0\plugins, plugins: List(<none>))) took 234.4485ms
[debug] [Loading] Done in C:\Users\Toriv\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 543.8157ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.7385ms
[debug]     Load.loadUnit(file:/C:/Users/Toriv/.sbt/1.0/plugins/, ...) took 1303.3212ms
[debug]   Load.apply: load took 2256.7005ms
[debug]   Load.apply: resolveProjects took 61.2972ms
[debug]   Load.apply: finalTransforms took 1043.5732ms
[debug]   Load.apply: config.delegates took 17.5523ms
[debug]   Load.apply: Def.make(settings)... took 6380.0377ms
[debug]   Load.apply: structureIndex took 398.0746ms
[debug]   Load.apply: mkStreams took 4.6212ms
[info] loading global plugins from C:\Users\Toriv\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 21893.7011ms
[debug]           Load.loadUnit: plugins took 67.4896ms
[debug]           Load.loadUnit: defsScala took 0.0059ms
[debug] [Loading] Scanning directory C:\Users\Toriv\Desktop\Учеба\SbtExampleProject\project
[debug]             Load.loadUnit: mkEval took 20.9746ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Toriv\Desktop\Учеба\SbtExampleProject\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.3323 ms
[info] loading settings for project sbtexampleproject-build from idea.sbt ...
[debug]               Load.resolveProject(sbtexampleproject-build) took 12.6721ms
[debug]             Load.loadTransitive: finalizeProject(Project(id sbtexampleproject-build, base: C:\Users\Toriv\Desktop\Учеба\SbtExampleProject\project, plugins: List(<none>))) took 18.0292ms
[debug] [Loading] Done in C:\Users\Toriv\Desktop\Учеба\SbtExampleProject\project, returning: (sbtexampleproject-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 5362.7964ms
[debug]           Load.loadUnit: cleanEvalClasses took 12.3058ms
[debug]         Load.loadUnit(file:/C:/Users/Toriv/Desktop/Учеба/SbtExampleProject/project/, ...) took 5445.0528ms
[debug]       Load.apply: load took 5448.8284ms
[debug]       Load.apply: resolveProjects took 0.4593ms
[debug]       Load.apply: finalTransforms took 72.192ms
[debug]       Load.apply: config.delegates took 0.4597ms
[debug]       Load.apply: Def.make(settings)... took 131.6978ms
[debug]       Load.apply: structureIndex took 76.4923ms
[debug]       Load.apply: mkStreams took 0.0037ms
[info] loading project definition from C:\Users\Toriv\Desktop\Учеба\SbtExampleProject\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 12785.1213ms
[debug]     Load.loadUnit: defsScala took 0.0065ms
[debug] [Loading] Scanning directory C:\Users\Toriv\Desktop\Учеба\SbtExampleProject
[debug]       Load.loadUnit: mkEval took 2.6325ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Toriv\Desktop\Учеба\SbtExampleProject, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 5.3966 ms
[info] loading settings for project sbtexampleproject from build.sbt ...
[debug]         Load.resolveProject(sbtexampleproject) took 101.092ms
[debug]       Load.loadTransitive: finalizeProject(Project(id sbtexampleproject, base: C:\Users\Toriv\Desktop\Учеба\SbtExampleProject, plugins: List(<none>))) took 109.7031ms
[debug] [Loading] Done in C:\Users\Toriv\Desktop\Учеба\SbtExampleProject, returning: (sbtexampleproject)
[debug]     Load.loadUnit: loadedProjectsRaw took 2017.514ms
[debug]     Load.loadUnit: cleanEvalClasses took 35.8894ms
[debug]   Load.loadUnit(file:/C:/Users/Toriv/Desktop/Учеба/SbtExampleProject/, ...) took 14842.4694ms
[debug] Load.apply: load took 14852.5959ms
[debug] Load.apply: resolveProjects took 0.4207ms
[debug] Load.apply: finalTransforms took 80.2367ms
[debug] Load.apply: config.delegates took 0.7078ms
[debug] Load.apply: Def.make(settings)... took 140.6741ms
[debug] Load.apply: structureIndex took 69.8875ms
[debug] Load.apply: mkStreams took 0.0043ms
[info] set current project to SbtExampleProject (in build file:/C:/Users/Toriv/Desktop/Учеба/SbtExampleProject/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 49382 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 49382, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to SbtExampleProject (in build file:/C:/Users/Toriv/Desktop/Учеба/SbtExampleProject/)
[debug] > Exec(idea-shell, None, None)
