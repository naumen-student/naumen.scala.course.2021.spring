[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Дарья\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Дарья\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (AdoptOpenJDK Java 1.8.0_282)
[debug]       Load.loadUnit: plugins took 124.1173ms
[debug]       Load.loadUnit: defsScala took 0.4602ms
[debug] [Loading] Scanning directory C:\Users\Дарья\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Дарья\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 28.6976 ms
[debug]           Load.resolveProject(global-plugins) took 51.6047ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Дарья\.sbt\1.0\plugins, plugins: List(<none>))) took 108.2482ms
[debug] [Loading] Done in C:\Users\Дарья\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 135.9088ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2819ms
[debug]     Load.loadUnit(file:/C:/Users/Дарья/.sbt/1.0/plugins/, ...) took 271.3588ms
[debug]   Load.apply: load took 505.9167ms
[debug]   Load.apply: resolveProjects took 7.1581ms
[debug]   Load.apply: finalTransforms took 101.7932ms
[debug]   Load.apply: config.delegates took 11.1968ms
[debug]   Load.apply: Def.make(settings)... took 1418.3436ms
[debug]   Load.apply: structureIndex took 178.9542ms
[debug]   Load.apply: mkStreams took 2.575ms
[info] loading global plugins from C:\Users\Дарья\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 26975.7457ms
[debug]           Load.loadUnit: plugins took 43.3377ms
[debug]           Load.loadUnit: defsScala took 0.0041ms
[debug] [Loading] Scanning directory D:\Desktop\SbtExampleProject\project
[debug]             Load.loadUnit: mkEval took 81.4351ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Desktop\SbtExampleProject\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.7468 ms
[info] loading settings for project sbtexampleproject-build from idea.sbt ...
[debug]               Load.resolveProject(sbtexampleproject-build) took 3.6895ms
[debug]             Load.loadTransitive: finalizeProject(Project(id sbtexampleproject-build, base: D:\Desktop\SbtExampleProject\project, plugins: List(<none>))) took 5.9185ms
[debug] [Loading] Done in D:\Desktop\SbtExampleProject\project, returning: (sbtexampleproject-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2897.7545ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.1868ms
[debug]         Load.loadUnit(file:/D:/Desktop/SbtExampleProject/project/, ...) took 2947.2121ms
[debug]       Load.apply: load took 2948.7399ms
[debug]       Load.apply: resolveProjects took 0.1323ms
[debug]       Load.apply: finalTransforms took 11.6521ms
[debug]       Load.apply: config.delegates took 0.4095ms
[debug]       Load.apply: Def.make(settings)... took 95.4012ms
[debug]       Load.apply: structureIndex took 40.7891ms
[debug]       Load.apply: mkStreams took 0.0028ms
[info] loading project definition from D:\Desktop\SbtExampleProject\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 5470.7541ms
[debug]     Load.loadUnit: defsScala took 0.0034ms
[debug] [Loading] Scanning directory D:\Desktop\SbtExampleProject
[debug]       Load.loadUnit: mkEval took 0.1803ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Desktop\SbtExampleProject, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.4269 ms
[info] loading settings for project sbtexampleproject from build.sbt ...
[debug]         Load.resolveProject(sbtexampleproject) took 45.0629ms
[debug]       Load.loadTransitive: finalizeProject(Project(id sbtexampleproject, base: D:\Desktop\SbtExampleProject, plugins: List(<none>))) took 48.9192ms
[debug] [Loading] Done in D:\Desktop\SbtExampleProject, returning: (sbtexampleproject)
[debug]     Load.loadUnit: loadedProjectsRaw took 1040.9384ms
[debug]     Load.loadUnit: cleanEvalClasses took 10.2932ms
[debug]   Load.loadUnit(file:/D:/Desktop/SbtExampleProject/, ...) took 6522.7854ms
[debug] Load.apply: load took 6525.4009ms
[debug] Load.apply: resolveProjects took 0.1375ms
[debug] Load.apply: finalTransforms took 35.3313ms
[debug] Load.apply: config.delegates took 0.3694ms
[debug] Load.apply: Def.make(settings)... took 98.4328ms
[debug] Load.apply: structureIndex took 26.9222ms
[debug] Load.apply: mkStreams took 0.0028ms
[info] set current project to SbtExampleProject (in build file:/D:/Desktop/SbtExampleProject/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 9668 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 9668, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to SbtExampleProject (in build file:/D:/Desktop/SbtExampleProject/)
[debug] > Exec(idea-shell, None, None)
