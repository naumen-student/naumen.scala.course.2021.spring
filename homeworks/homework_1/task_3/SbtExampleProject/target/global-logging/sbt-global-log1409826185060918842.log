[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Анна\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Анна\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (Oracle Corporation Java 1.8.0_261)
[debug]       Load.loadUnit: plugins took 324.9664ms
[debug]       Load.loadUnit: defsScala took 0.7916ms
[debug] [Loading] Scanning directory C:\Users\Анна\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Анна\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 73.6636 ms
[debug]           Load.resolveProject(global-plugins) took 134.83ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Анна\.sbt\1.0\plugins, plugins: List(<none>))) took 281.6877ms
[debug] [Loading] Done in C:\Users\Анна\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 342.3623ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.672ms
[debug]     Load.loadUnit(file:/C:/Users/Анна/.sbt/1.0/plugins/, ...) took 689.7724ms
[debug]   Load.apply: load took 1165.3259ms
[debug]   Load.apply: resolveProjects took 20.3314ms
[debug]   Load.apply: finalTransforms took 262.645ms
[debug]   Load.apply: config.delegates took 27.4942ms
[debug]   Load.apply: Def.make(settings)... took 3502.129ms
[debug]   Load.apply: structureIndex took 426.9072ms
[debug]   Load.apply: mkStreams took 5.1864ms
[info] loading global plugins from C:\Users\Анна\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 13103.1487ms
[debug]           Load.loadUnit: plugins took 79.7339ms
[debug]           Load.loadUnit: defsScala took 0.008ms
[debug] [Loading] Scanning directory C:\Users\Анна\IdeaProjects\ SbtExampleProject\project
[debug]             Load.loadUnit: mkEval took 20.62ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Анна\IdeaProjects\ SbtExampleProject\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 5.2466 ms
[info] loading settings for project root--sbtexampleproject-build from idea1.sbt ...
[debug]               Load.resolveProject(root--sbtexampleproject-build) took 9.6208ms
[debug]             Load.loadTransitive: finalizeProject(Project(id root--sbtexampleproject-build, base: C:\Users\Анна\IdeaProjects\ SbtExampleProject\project, plugins: List(<none>))) took 16.3338ms
[debug] [Loading] Done in C:\Users\Анна\IdeaProjects\ SbtExampleProject\project, returning: (root--sbtexampleproject-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 449.956ms
[debug]           Load.loadUnit: cleanEvalClasses took 12.5367ms
[debug]         Load.loadUnit(file:/C:/Users/Анна/IdeaProjects/%20SbtExampleProject/project/, ...) took 545.1873ms
[debug]       Load.apply: load took 549.5169ms
[debug]       Load.apply: resolveProjects took 0.3221ms
[debug]       Load.apply: finalTransforms took 70.9028ms
[debug]       Load.apply: config.delegates took 1.1839ms
[debug]       Load.apply: Def.make(settings)... took 508.3775ms
[debug]       Load.apply: structureIndex took 93.5419ms
[debug]       Load.apply: mkStreams took 0.0073ms
[info] loading project definition from C:\Users\Анна\IdeaProjects\ SbtExampleProject\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 2340.5379ms
[debug]     Load.loadUnit: defsScala took 0.0127ms
[debug] [Loading] Scanning directory C:\Users\Анна\IdeaProjects\ SbtExampleProject
[debug]       Load.loadUnit: mkEval took 1.6052ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Анна\IdeaProjects\ SbtExampleProject, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 5.8872 ms
[info] loading settings for project root--sbtexampleproject from build.sbt ...
[debug]         Load.resolveProject(root--sbtexampleproject) took 92.8137ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root--sbtexampleproject, base: C:\Users\Анна\IdeaProjects\ SbtExampleProject, plugins: List(<none>))) took 103.4884ms
[debug] [Loading] Done in C:\Users\Анна\IdeaProjects\ SbtExampleProject, returning: (root--sbtexampleproject)
[debug]     Load.loadUnit: loadedProjectsRaw took 7671.8164ms
[debug]     Load.loadUnit: cleanEvalClasses took 14.0256ms
[debug]   Load.loadUnit(file:/C:/Users/Анна/IdeaProjects/%20SbtExampleProject/, ...) took 10028.5602ms
[debug] Load.apply: load took 10033.4136ms
[debug] Load.apply: resolveProjects took 0.4162ms
[debug] Load.apply: finalTransforms took 102.5013ms
[debug] Load.apply: config.delegates took 0.8731ms
[debug] Load.apply: Def.make(settings)... took 290.0278ms
[debug] Load.apply: structureIndex took 83.4388ms
[debug] Load.apply: mkStreams took 0.0059ms
[info] set current project to SbtExampleProject (in build file:/C:/Users/Анна/IdeaProjects/%20SbtExampleProject/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 62647 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 62647, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to SbtExampleProject (in build file:/C:/Users/Анна/IdeaProjects/%20SbtExampleProject/)
[debug] > Exec(idea-shell, None, None)
