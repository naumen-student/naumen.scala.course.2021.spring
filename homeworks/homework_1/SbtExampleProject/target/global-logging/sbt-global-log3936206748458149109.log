[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(--addPluginSbtFile=C:\Users\Дмитрий\AppData\Local\Temp\idea4.sbt, None, None)
[debug] > Exec(addPluginSbtFile=C:\Users\Дмитрий\AppData\Local\Temp\idea4.sbt, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (JetBrains s.r.o Java 11.0.3)
[debug]       Load.loadUnit: plugins took 122.8187ms
[debug]       Load.loadUnit: defsScala took 0.3092ms
[debug] [Loading] Scanning directory C:\Users\Дмитрий\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Дмитрий\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 22.3556 ms
[debug]           Load.resolveProject(global-plugins) took 93.1115ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Дмитрий\.sbt\1.0\plugins, plugins: List(<none>))) took 141.8738ms
[debug] [Loading] Done in C:\Users\Дмитрий\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 173.3785ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3514ms
[debug]     Load.loadUnit(file:/C:/Users/Дмитрий/.sbt/1.0/plugins/, ...) took 308.7703ms
[debug]   Load.apply: load took 533.0401ms
[debug]   Load.apply: resolveProjects took 7.7004ms
[debug]   Load.apply: finalTransforms took 91.0152ms
[debug]   Load.apply: config.delegates took 8.4706ms
[debug]   Load.apply: Def.make(settings)... took 874.5056ms
[debug]   Load.apply: structureIndex took 115.2003ms
[debug]   Load.apply: mkStreams took 2.7412ms
[info] loading global plugins from C:\Users\Дмитрий\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3388.5736ms
[debug]           Load.loadUnit: plugins took 31.6987ms
[debug]           Load.loadUnit: defsScala took 0.0062ms
[debug] [Loading] Scanning directory C:\Users\Дмитрий\SbtExampleProject\project
[debug]             Load.loadUnit: mkEval took 11.032ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Дмитрий\SbtExampleProject\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.8642 ms
[info] loading settings for project sbtexampleproject-build from idea4.sbt ...
[debug]               Load.resolveProject(sbtexampleproject-build) took 3.1247ms
[debug]             Load.loadTransitive: finalizeProject(Project(id sbtexampleproject-build, base: C:\Users\Дмитрий\SbtExampleProject\project, plugins: List(<none>))) took 5.6759ms
[debug] [Loading] Done in C:\Users\Дмитрий\SbtExampleProject\project, returning: (sbtexampleproject-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2522.1486ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.6892ms
[debug]         Load.loadUnit(file:/C:/Users/Дмитрий/SbtExampleProject/project/, ...) took 2559.6986ms
[debug]       Load.apply: load took 2561.3526ms
[debug]       Load.apply: resolveProjects took 0.1105ms
[debug]       Load.apply: finalTransforms took 15.6046ms
[debug]       Load.apply: config.delegates took 0.4193ms
[debug]       Load.apply: Def.make(settings)... took 111.4227ms
[debug]       Load.apply: structureIndex took 34.4494ms
[debug]       Load.apply: mkStreams took 0.0028ms
[info] loading project definition from C:\Users\Дмитрий\SbtExampleProject\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 4022.5369ms
[debug]     Load.loadUnit: defsScala took 0.0054ms
[debug] [Loading] Scanning directory C:\Users\Дмитрий\SbtExampleProject
[debug]       Load.loadUnit: mkEval took 0.345ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Дмитрий\SbtExampleProject, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.5508 ms
[info] loading settings for project sbtexampleproject from build.sbt ...
[debug]         Load.resolveProject(sbtexampleproject) took 38.2241ms
[debug]       Load.loadTransitive: finalizeProject(Project(id sbtexampleproject, base: C:\Users\Дмитрий\SbtExampleProject, plugins: List(<none>))) took 40.8696ms
[debug] [Loading] Done in C:\Users\Дмитрий\SbtExampleProject, returning: (sbtexampleproject)
[debug]     Load.loadUnit: loadedProjectsRaw took 985.0867ms
[debug]     Load.loadUnit: cleanEvalClasses took 12.1749ms
[debug]   Load.loadUnit(file:/C:/Users/Дмитрий/SbtExampleProject/, ...) took 5020.6736ms
[debug] Load.apply: load took 5022.614ms
[debug] Load.apply: resolveProjects took 0.1261ms
[debug] Load.apply: finalTransforms took 37.521ms
[debug] Load.apply: config.delegates took 0.6155ms
[debug] Load.apply: Def.make(settings)... took 69.6312ms
[debug] Load.apply: structureIndex took 32.8917ms
[debug] Load.apply: mkStreams took 0.0037ms
[info] set current project to SbtExampleProject (in build file:/C:/Users/Дмитрий/SbtExampleProject/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 49875 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 49875, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to SbtExampleProject (in build file:/C:/Users/Дмитрий/SbtExampleProject/)
[debug] > Exec(idea-shell, None, None)
